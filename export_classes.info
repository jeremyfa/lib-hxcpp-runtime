class sys.net.UdpSocket
super sys.net.Socket
function pub m new void
function pub m sendTo int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
arg addr : sys.net.Address
function pub m readFrom int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
arg addr : sys.net.Address
class sys.net.Socket
function pub m new void
var priv m __s Dynamic
property pub m v 0 input haxe.io.Input
property pub m v 0 output haxe.io.Output
var pub m custom Dynamic
function pub m close void
function pub m read String
function pub m write void
arg content : String
function pub m connect void
arg host : sys.net.Host
arg port : int
function pub m listen void
arg connections : int
function pub m shutdown void
arg read : bool
arg write : bool
function pub m bind void
arg host : sys.net.Host
arg port : int
function pub m accept sys.net.Socket
function pub m peer Dynamic
function pub m host Dynamic
function pub m setTimeout void
arg timeout : float
function pub m waitForRead void
function pub m setBlocking void
arg b : bool
function pub m setFastSend void
arg b : bool
function pub s select Dynamic
arg read : Array<sys.net.Socket>
arg write : Array<sys.net.Socket>
arg others : Array<sys.net.Socket>
arg timeout ? Null<float>
var priv s socket_new fun<bool,Dynamic>
var priv s socket_close fun<Dynamic,Dynamic>
var priv s socket_write fun<Dynamic,Array<uint8>,Dynamic>
var priv s socket_read fun<Dynamic,Array<uint8>>
var priv s socket_connect fun<Dynamic,int,int,Dynamic>
var priv s socket_listen fun<Dynamic,int,Dynamic>
var priv s socket_select fun<Array<sys.net.Socket>,Array<sys.net.Socket>,Array<sys.net.Socket>,Null<float>,Array<Array<sys.net.Socket>>>
var priv s socket_bind fun<Dynamic,int,int,Dynamic>
var priv s socket_accept fun<Dynamic,Dynamic>
var priv s socket_peer fun<Dynamic,Dynamic>
var priv s socket_host fun<Dynamic,Dynamic>
var priv s socket_set_timeout fun<Dynamic,float,Dynamic>
var priv s socket_shutdown fun<Dynamic,bool,bool,Dynamic>
var priv s socket_set_blocking fun<Dynamic,bool,Dynamic>
var priv s socket_set_fast_send fun<Dynamic,bool,Dynamic>
class sys.net._Socket.SocketOutput
super haxe.io.Output
function pub m new void
arg s : Dynamic
var priv m __s Dynamic
function pub m writeByte void
arg c : int
function pub m writeBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
function pub m close void
var priv s socket_close fun<Dynamic,Dynamic>
var priv s socket_send_char fun<Dynamic,int,Dynamic>
var priv s socket_send fun<Dynamic,Array<uint8>,int,int,int>
class sys.net._Socket.SocketInput
super haxe.io.Input
function pub m new void
arg s : Dynamic
var priv m __s Dynamic
function pub m readByte int
function pub m readBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
function pub m close void
var priv s socket_recv fun<Dynamic,Array<uint8>,int,int,int>
var priv s socket_recv_char fun<Dynamic,int>
var priv s socket_close fun<Dynamic,Dynamic>
class sys.net.Host
function pub m new void
arg name : String
property pub m v 0 ip int
function pub m toString String
function pub m reverse String
function pub s localhost String
var priv s host_resolve fun<String,int>
var priv s host_reverse fun<int,String>
var priv s host_to_string fun<int,String>
var priv s host_local fun<String>
class sys.net.Address
function pub m new void
var pub m host int
var pub m port int
function pub m getHost sys.net.Host
function pub m compare int
arg a : sys.net.Address
function pub m clone sys.net.Address
class sys.io.Process
function pub m new void
arg cmd : String
arg args : Array<String>
var priv m p Dynamic
property pub m v 0 stdout haxe.io.Input
property pub m v 0 stderr haxe.io.Input
property pub m v 0 stdin haxe.io.Output
function pub m getPid int
function pub m exitCode int
function pub m close void
function pub m kill void
var priv s _run fun<String,Array<String>,Dynamic>
var priv s _exit fun<Dynamic,int>
var priv s _pid fun<Dynamic,int>
var priv s _close fun<Dynamic,Dynamic>
class sys.io._Process.Stdout
super haxe.io.Input
function pub m new void
arg p : Dynamic
arg out : bool
var priv m p Dynamic
var priv m out bool
var priv m buf haxe.io.Bytes
function pub m readByte int
function pub m readBytes int
arg str : haxe.io.Bytes
arg pos : int
arg len : int
var priv s _stdout_read fun<Dynamic,Array<uint8>,int,int,int>
var priv s _stderr_read fun<Dynamic,Array<uint8>,int,int,int>
class sys.io._Process.Stdin
super haxe.io.Output
function pub m new void
arg p : Dynamic
var priv m p Dynamic
var priv m buf haxe.io.Bytes
function pub m close void
function pub m writeByte void
arg c : int
function pub m writeBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
var priv s _stdin_write fun<Dynamic,Array<uint8>,int,int,int>
var priv s _stdin_close fun<Dynamic,Dynamic>
enum sys.io.FileSeek
constructor SeekBegin
constructor SeekCur
constructor SeekEnd
class sys.io.FileOutput
super haxe.io.Output
function priv m new void
arg f : Dynamic
var priv m __f Dynamic
function pub m writeByte void
arg c : int
function pub m writeBytes int
arg s : haxe.io.Bytes
arg p : int
arg l : int
function pub m flush void
function pub m close void
function pub m seek void
arg p : int
arg pos : sys.io.FileSeek
function pub m tell int
var priv s file_close fun<Dynamic,Dynamic>
var priv s file_seek fun<Dynamic,int,int,Dynamic>
var priv s file_tell fun<Dynamic,int>
var priv s file_flush fun<Dynamic,Dynamic>
var priv s file_write fun<Dynamic,Array<uint8>,int,int,int>
var priv s file_write_char fun<Dynamic,int,Dynamic>
class sys.io.FileInput
super haxe.io.Input
function priv m new void
arg f : Dynamic
var priv m __f Dynamic
function pub m readByte int
function pub m readBytes int
arg s : haxe.io.Bytes
arg p : int
arg l : int
function pub m close void
function pub m seek void
arg p : int
arg pos : sys.io.FileSeek
function pub m tell int
function pub m eof bool
var priv s file_eof fun<Dynamic,bool>
var priv s file_read fun<Dynamic,Array<uint8>,int,int,int>
var priv s file_read_char fun<Dynamic,int>
var priv s file_close fun<Dynamic,Dynamic>
var priv s file_seek fun<Dynamic,int,int,Dynamic>
var priv s file_tell fun<Dynamic,int>
class sys.io.File
function pub s getContent String
arg path : String
function pub s getBytes haxe.io.Bytes
arg path : String
function pub s saveContent void
arg path : String
arg content : String
function pub s saveBytes void
arg path : String
arg bytes : haxe.io.Bytes
function pub s read sys.io.FileInput
arg path : String
arg binary ? bool
function pub s write sys.io.FileOutput
arg path : String
arg binary ? bool
function pub s append sys.io.FileOutput
arg path : String
arg binary ? bool
function pub s copy void
arg srcPath : String
arg dstPath : String
var priv s file_contents fun<String,Array<uint8>>
var priv s file_open fun<String,String,Dynamic>
class sys.db.Transaction
function pub s isDeadlock bool
arg e : Dynamic
function priv s runMainLoop void
arg mainFun : fun<void>
arg logError : fun<Dynamic,void>
arg count : int
function pub s main void
arg cnx : sys.db.Connection
arg mainFun : fun<void>
arg logError ? fun<Dynamic,void>
class sys.db.TableCreate
function priv s autoInc String
arg dbName : String
function pub s getTypeSQL String
arg t : sys.db.RecordType
arg dbName : String
function pub s create void
arg manager : sys.db.Manager
arg engine ? String
function pub s exists bool
arg manager : sys.db.Manager
class sys.db.Sqlite
function pub s open sys.db.Connection
arg file : String
class sys.db._Sqlite.SqliteResultSet
implements sys.db.ResultSet
function pub m new void
arg r : Dynamic
property pub m c 0 length int
property pub m c 0 nfields int
var priv m r Dynamic
var priv m cache List
function priv m get_length int
function priv m get_nfields int
function pub m hasNext bool
function pub m next Dynamic
function pub m results List
function pub m getResult String
arg n : int
function pub m getIntResult int
arg n : int
function pub m getFloatResult float
arg n : int
function pub m getFieldsNames Array<String>
var priv s result_next fun<Dynamic,Dynamic>
var priv s result_get_length fun<Dynamic,int>
var priv s result_get_nfields fun<Dynamic,int>
var priv s result_get fun<Dynamic,int,String>
var priv s result_get_int fun<Dynamic,int,int>
var priv s result_get_float fun<Dynamic,int,float>
class sys.db._Sqlite.SqliteConnection
implements sys.db.Connection
function pub m new void
arg file : String
var priv m c Dynamic
function pub m close void
function pub m request sys.db.ResultSet
arg s : String
function pub m escape String
arg s : String
function pub m quote String
arg s : String
function pub m addValue void
arg s : StringBuf
arg v : Dynamic
function pub m lastInsertId int
function pub m dbName String
function pub m startTransaction void
function pub m commit void
function pub m rollback void
var priv s _encode fun<String,String,String>
var priv s _connect fun<String,Dynamic>
var priv s _close fun<Dynamic,Dynamic>
var priv s _request fun<Dynamic,String,Dynamic>
var priv s _last_id fun<Dynamic,int>
class sys.db.RecordMacros
function priv m new void
arg c : Dynamic
var priv m isNull bool
var priv m manager Dynamic
var priv m inf Dynamic
var priv m g Dynamic
function priv m initGlobals Dynamic
dynamicfunction pub m error Dynamic
arg msg : String
arg pos : Dynamic
dynamicfunction pub m typeof haxe.macro.Type
arg e : Dynamic
dynamicfunction pub m follow haxe.macro.Type
arg t : haxe.macro.Type
arg once ? Null<bool>
dynamicfunction pub m getManager sys.db.RecordMacros
arg t : haxe.macro.Type
arg p : Dynamic
dynamicfunction pub m resolveType haxe.macro.Type
arg name : String
arg module ? String
function priv m makeInt Null<int>
arg t : haxe.macro.Type
function priv m makeRecord Dynamic
arg t : haxe.macro.Type
function priv m getFlags Array<String>
arg t : haxe.macro.Type
function priv m makeType sys.db.RecordType
arg t : haxe.macro.Type
function priv m makeIdent String
arg e : Dynamic
function priv m getRecordInfos Dynamic
arg c : Dynamic
function priv m quoteField String
arg f : String
function priv m initManager void
arg pos : Dynamic
function priv m makeString Dynamic
arg s : String
arg pos : Dynamic
function priv m makeOp Dynamic
arg op : String
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m sqlAdd Dynamic
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m sqlAddString Dynamic
arg sql : Dynamic
arg s : String
function priv m sqlQuoteValue Dynamic
arg v : Dynamic
arg t : sys.db.RecordType
function priv m sqlAddValue Dynamic
arg sql : Dynamic
arg v : Dynamic
arg t : sys.db.RecordType
function priv m unifyClass int
arg t : sys.db.RecordType
function priv m tryUnify bool
arg t : sys.db.RecordType
arg rt : sys.db.RecordType
function priv m typeStr String
arg t : sys.db.RecordType
function priv m canStringify bool
arg t : sys.db.RecordType
function priv m convertType haxe.macro.ComplexType
arg t : sys.db.RecordType
function priv m unify void
arg t : sys.db.RecordType
arg rt : sys.db.RecordType
arg pos : Dynamic
function priv m buildCmp Dynamic
arg op : String
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m buildNum Dynamic
arg op : String
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m buildInt Dynamic
arg op : String
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m buildEq Dynamic
arg eq : bool
arg e1 : Dynamic
arg e2 : Dynamic
arg pos : Dynamic
function priv m buildDefault Dynamic
arg cond : Dynamic
function priv m getField Dynamic
arg f : Dynamic
function priv m buildCond Dynamic
arg cond : Dynamic
function priv m ensureType Dynamic
arg e : Dynamic
arg rt : sys.db.RecordType
function priv m checkKeys Dynamic
arg econd : Dynamic
function priv m orderField String
arg e : Dynamic
function priv m concatStrings Dynamic
arg e : Dynamic
function priv m browseStrings void
arg inf : Dynamic
arg e : Dynamic
function priv m buildOptions Dynamic
arg eopt : Dynamic
var priv s GLOBAL Dynamic
var priv s simpleString EReg
function pub s getInfos sys.db.RecordMacros
arg t : haxe.macro.Type
enum sys.db.RecordType
constructor DId
constructor DInt
constructor DUId
constructor DUInt
constructor DBigId
constructor DBigInt
constructor DSingle
constructor DFloat
constructor DBool
constructor DString
eparam n int
constructor DDate
constructor DDateTime
constructor DTimeStamp
constructor DTinyText
constructor DSmallText
constructor DText
constructor DSmallBinary
constructor DLongBinary
constructor DBinary
constructor DBytes
eparam n int
constructor DEncoded
constructor DSerialized
constructor DNekoSerialized
constructor DFlags
eparam flags Array<String>
eparam autoSize bool
constructor DTinyInt
constructor DTinyUInt
constructor DSmallInt
constructor DSmallUInt
constructor DMediumInt
constructor DMediumUInt
constructor DData
constructor DEnum
eparam name String
constructor DInterval
constructor DNull
class sys.db.Object
function pub m new void
property priv m v ! _lock bool
property priv m v ! _manager sys.db.Manager
var priv m __cache__ Dynamic
function priv m __getManager sys.db.Manager
function pub m insert void
function pub m update void
function pub m lock void
function pub m delete void
function pub m isLocked bool
function pub m toString String
class sys.db.Mysql
function pub s connect sys.db.Connection
arg params : Dynamic
class sys.db._Mysql.MysqlConnection
implements sys.db.Connection
function pub m new void
arg c : Dynamic
var priv m __c Dynamic
function pub m request sys.db.ResultSet
arg s : String
function pub m close void
function pub m escape String
arg s : String
function pub m quote String
arg s : String
function pub m addValue void
arg s : StringBuf
arg v : Dynamic
function pub m lastInsertId int
function pub m dbName String
function pub m startTransaction void
function pub m commit void
function pub m rollback void
var priv s __use_date Dynamic
class sys.db._Mysql.MysqlResultSet
implements sys.db.ResultSet
function pub m new void
arg r : Dynamic
property pub m c 0 length int
property pub m c 0 nfields int
var priv m __r Dynamic
var priv m cache Dynamic
function priv m get_length int
function priv m get_nfields int
function pub m hasNext bool
function pub m next Dynamic
function pub m results List
function pub m getResult String
arg n : int
function pub m getIntResult int
arg n : int
function pub m getFloatResult float
arg n : int
function pub m getFieldsNames Array<String>
interface sys.db.ResultSet
function pub m get_length int
function pub m get_nfields int
property pub m c 0 length int
property pub m c 0 nfields int
function pub m hasNext bool
function pub m next Dynamic
function pub m results List
function pub m getResult String
arg n : int
function pub m getIntResult int
arg n : int
function pub m getFloatResult float
arg n : int
function pub m getFieldsNames Array<String>
class sys.db._Mysql.D
function priv s load Dynamic
arg fun : String
arg args : int
var priv s lib String
var pub s connect fun<Dynamic,Dynamic>
var pub s select_db fun<Dynamic,String,Dynamic>
var pub s request fun<Dynamic,String,Dynamic>
var pub s close fun<Dynamic,Dynamic>
var pub s escape fun<Dynamic,String,String>
var pub s set_conv_funs fun<Dynamic,fun<String,String>,fun<Dynamic,Dynamic>,fun<Array<uint8>,haxe.io.Bytes>,Dynamic>
var pub s result_get_length fun<Dynamic,int>
var pub s result_get_nfields fun<Dynamic,int>
var pub s result_next fun<Dynamic,Dynamic>
var pub s result_get fun<Dynamic,int,String>
var pub s result_get_int fun<Dynamic,int,int>
var pub s result_get_float fun<Dynamic,int,float>
var pub s result_fields_names fun<Dynamic,Array<String>>
class sys.db.Manager
function pub m new void
arg classval : Class
var priv m table_infos Dynamic
var priv m table_name String
var priv m table_keys Array<String>
var priv m class_proto Dynamic
function pub m all List
arg lock ? Null<bool>
function pub m dynamicSearch List
arg x : Dynamic
arg lock ? Null<bool>
function priv m quote String
arg s : String
function priv m doUpdateCache haxe.io.Bytes
arg x : Dynamic
arg name : String
arg v : Dynamic
function priv m doInsert void
arg x : Dynamic
function priv m isBinary bool
arg t : sys.db.RecordType
function priv m hasBinaryChanged bool
arg a : haxe.io.Bytes
arg b : haxe.io.Bytes
function priv m doUpdate void
arg x : Dynamic
function priv m getUpdateStatement String
arg x : Dynamic
function priv m doDelete void
arg x : Dynamic
function priv m doLock void
arg i : Dynamic
function priv m objectToString String
arg it : Dynamic
function priv m doSerialize haxe.io.Bytes
arg field : String
arg v : Dynamic
function priv m doUnserialize Dynamic
arg field : String
arg b : haxe.io.Bytes
function priv m normalizeCache void
arg x : Dynamic
function priv m cacheObject Dynamic
arg x : Dynamic
arg lock : bool
function priv m make void
arg x : Dynamic
function priv m unmake void
arg x : Dynamic
function priv m quoteField String
arg f : String
function priv m addKeys void
arg s : StringBuf
arg x : Dynamic
function priv m unsafeExecute sys.db.ResultSet
arg sql : String
function pub m unsafeObject Dynamic
arg sql : String
arg lock : bool
function pub m unsafeObjects List
arg sql : String
arg lock : bool
function pub m unsafeCount int
arg sql : String
function pub m unsafeDelete void
arg sql : String
function pub m unsafeGet Dynamic
arg id : Dynamic
arg lock ? Null<bool>
function pub m unsafeGetWithKeys Dynamic
arg keys : Dynamic
arg lock ? Null<bool>
function pub m unsafeGetId Dynamic
arg o : Dynamic
function priv m addCondition void
arg s : StringBuf
arg x : Dynamic
function pub m dbClass Class
function pub m dbInfos Dynamic
function priv m getCnx sys.db.Connection
function priv m getLockMode String
function pub m forceUpdate void
arg o : Dynamic
arg field : String
function priv m initRelation void
arg r : Dynamic
function priv m __get Dynamic
arg x : Dynamic
arg prop : String
arg key : String
arg lock : Null<bool>
function priv m __set Dynamic
arg x : Dynamic
arg prop : String
arg key : String
arg v : Dynamic
function priv m makeCacheKey String
arg x : Dynamic
function priv m addToCache void
arg x : Dynamic
function priv m removeFromCache void
arg x : Dynamic
function priv m getFromCacheKey Dynamic
arg key : String
function priv m getFromCache Dynamic
arg x : Dynamic
arg lock : bool
property pub s v c cnx sys.db.Connection
var pub s lockMode String
inlinevar cache_field String
var priv s object_cache haxe.ds.StringMap
var priv s init_list List
var priv s KEYWORDS haxe.ds.StringMap
function priv s set_cnx sys.db.Connection
arg c : sys.db.Connection
function priv s getFieldName String
arg field : Dynamic
function pub s nullCompare String
arg a : String
arg b : String
arg eq : bool
function pub s initialize void
function pub s cleanup void
function pub s quoteAny String
arg v : Dynamic
function pub s quoteList String
arg v : String
arg it : Dynamic
function priv s __depends String
interface sys.db.Connection
function pub m request sys.db.ResultSet
arg s : String
function pub m close void
function pub m escape String
arg s : String
function pub m quote String
arg s : String
function pub m addValue void
arg s : StringBuf
arg v : Dynamic
function pub m lastInsertId int
function pub m dbName String
function pub m startTransaction void
function pub m commit void
function pub m rollback void
class sys.FileSystem
function pub s exists bool
arg path : String
function pub s rename void
arg path : String
arg newPath : String
function pub s stat Dynamic
arg path : String
function pub s fullPath String
arg relPath : String
function pub s absolutePath String
arg relPath : String
function priv s kind sys._FileSystem.FileKind
arg path : String
function pub s isDirectory bool
arg path : String
function pub s createDirectory void
arg path : String
function pub s deleteFile void
arg path : String
function pub s deleteDirectory void
arg path : String
function pub s readDirectory Array<String>
arg path : String
var priv s sys_exists fun<String,bool>
var priv s file_delete fun<String,Dynamic>
var priv s sys_rename fun<String,String,Dynamic>
var priv s sys_stat fun<String,Dynamic>
var priv s sys_file_type fun<String,String>
var priv s sys_create_dir fun<String,int,Dynamic>
var priv s sys_remove_dir fun<String,Dynamic>
var priv s sys_read_dir fun<String,Array<String>>
var priv s file_full_path fun<String,String>
enum sys._FileSystem.FileKind
constructor kdir
constructor kfile
constructor kother
eparam k String
class hx2objc.IDHolder
function pub m new void
arg _id : int
var pub m instance_id int
function pub s destroy void
arg id_holder : hx2objc.IDHolder
class haxe.zip.Uncompress
function pub m new void
arg windowBits ? Null<int>
var priv m s Dynamic
function pub m execute Dynamic
arg src : haxe.io.Bytes
arg srcPos : int
arg dst : haxe.io.Bytes
arg dstPos : int
function pub m setFlushMode void
arg f : haxe.zip.FlushMode
function pub m close void
function pub s run haxe.io.Bytes
arg src : haxe.io.Bytes
arg bufsize ? Null<int>
var priv s _inflate_init fun<Null<int>,Dynamic>
var priv s _inflate_buffer fun<Dynamic,Array<uint8>,int,Array<uint8>,int,Dynamic>
var priv s _inflate_end fun<Dynamic,Dynamic>
var priv s _set_flush_mode fun<Dynamic,Dynamic,Dynamic>
enum haxe.zip.FlushMode
constructor NO
constructor SYNC
constructor FULL
constructor FINISH
constructor BLOCK
class haxe.zip.Compress
function pub m new void
arg level : int
var priv m s Dynamic
function pub m execute Dynamic
arg src : haxe.io.Bytes
arg srcPos : int
arg dst : haxe.io.Bytes
arg dstPos : int
function pub m setFlushMode void
arg f : haxe.zip.FlushMode
function pub m close void
function pub s run haxe.io.Bytes
arg s : haxe.io.Bytes
arg level : int
var priv s _deflate_init fun<int,Dynamic>
var priv s _deflate_bound fun<Dynamic,int,int>
var priv s _deflate_buffer fun<Dynamic,Array<uint8>,int,Array<uint8>,int,Dynamic>
var priv s _deflate_end fun<Dynamic,Dynamic>
var priv s _set_flush_mode fun<Dynamic,String,Dynamic>
class haxe.xml.Printer
function priv m new void
arg pretty : bool
var priv m output StringBuf
var priv m pretty bool
function priv m writeNode void
arg value : Xml
arg tabs : String
function priv m write void
arg input : String
function priv m newline void
function priv m hasChildren bool
arg value : Xml
function pub s print String
arg xml : Xml
arg pretty ? Null<bool>
class haxe.xml.Parser
var priv s escapes haxe.ds.StringMap
function pub s parse Xml
arg str : String
arg strict ? bool
function priv s doParse int
arg str : String
arg strict : bool
arg p ? int
arg parent ? Xml
function priv s isValidChar bool
arg c : int
class haxe.rtti.Meta
function pub s getType Dynamic
arg t : Dynamic
function priv s getMeta Dynamic
arg t : Dynamic
function pub s getStatics Dynamic
arg t : Dynamic
function pub s getFields Dynamic
arg t : Dynamic
enum haxe.macro.TypedExprDef
constructor TConst
eparam c haxe.macro.TConstant
constructor TLocal
eparam v Dynamic
constructor TArray
eparam e1 Dynamic
eparam e2 Dynamic
constructor TBinop
eparam op haxe.macro.Binop
eparam e1 Dynamic
eparam e2 Dynamic
constructor TField
eparam e Dynamic
eparam fa haxe.macro.FieldAccess
constructor TTypeExpr
eparam m haxe.macro.ModuleType
constructor TParenthesis
eparam e Dynamic
constructor TObjectDecl
eparam fields Array<Dynamic>
constructor TArrayDecl
eparam el Array<Dynamic>
constructor TCall
eparam e Dynamic
eparam el Array<Dynamic>
constructor TNew
eparam c Dynamic
eparam params Array<haxe.macro.Type>
eparam el Array<Dynamic>
constructor TUnop
eparam op haxe.macro.Unop
eparam postFix bool
eparam e Dynamic
constructor TFunction
eparam tfunc Dynamic
constructor TVar
eparam v Dynamic
eparam expr Dynamic
constructor TBlock
eparam el Array<Dynamic>
constructor TFor
eparam v Dynamic
eparam e1 Dynamic
eparam e2 Dynamic
constructor TIf
eparam econd Dynamic
eparam eif Dynamic
eparam eelse Dynamic
constructor TWhile
eparam econd Dynamic
eparam e Dynamic
eparam normalWhile bool
constructor TSwitch
eparam e Dynamic
eparam cases Array<Dynamic>
eparam edef Dynamic
constructor TTry
eparam e Dynamic
eparam catches Array<Dynamic>
constructor TReturn
eparam e Dynamic
constructor TBreak
constructor TContinue
constructor TThrow
eparam e Dynamic
constructor TCast
eparam e Dynamic
eparam m haxe.macro.ModuleType
constructor TMeta
eparam m Dynamic
eparam e1 Dynamic
constructor TEnumParameter
eparam e1 Dynamic
eparam ef Dynamic
eparam index int
enum haxe.macro.FieldAccess
constructor FInstance
eparam c Dynamic
eparam params Array<haxe.macro.Type>
eparam cf Dynamic
constructor FStatic
eparam c Dynamic
eparam cf Dynamic
constructor FAnon
eparam cf Dynamic
constructor FDynamic
eparam s String
constructor FClosure
eparam c Dynamic
eparam cf Dynamic
constructor FEnum
eparam e Dynamic
eparam ef Dynamic
enum haxe.macro.ModuleType
constructor TClassDecl
eparam c Dynamic
constructor TEnumDecl
eparam e Dynamic
constructor TTypeDecl
eparam t Dynamic
constructor TAbstract
eparam a Dynamic
enum haxe.macro.TConstant
constructor TInt
eparam i int
constructor TFloat
eparam s String
constructor TString
eparam s String
constructor TBool
eparam b bool
constructor TNull
constructor TThis
constructor TSuper
enum haxe.macro.MethodKind
constructor MethNormal
constructor MethInline
constructor MethDynamic
constructor MethMacro
enum haxe.macro.VarAccess
constructor AccNormal
constructor AccNo
constructor AccNever
constructor AccResolve
constructor AccCall
constructor AccInline
constructor AccRequire
eparam r String
eparam msg String
enum haxe.macro.FieldKind
constructor FVar
eparam read haxe.macro.VarAccess
eparam write haxe.macro.VarAccess
constructor FMethod
eparam k haxe.macro.MethodKind
enum haxe.macro.ClassKind
constructor KNormal
constructor KTypeParameter
eparam constraints Array<haxe.macro.Type>
constructor KExtension
eparam cl Dynamic
eparam params Array<haxe.macro.Type>
constructor KExpr
eparam expr Dynamic
constructor KGeneric
constructor KGenericInstance
eparam cl Dynamic
eparam params Array<haxe.macro.Type>
constructor KMacroType
constructor KAbstractImpl
eparam a Dynamic
constructor KGenericBuild
enum haxe.macro.AnonStatus
constructor AClosed
constructor AOpened
constructor AConst
constructor AExtend
eparam tl Dynamic
constructor AClassStatics
eparam t Dynamic
constructor AEnumStatics
eparam t Dynamic
constructor AAbstractStatics
eparam t Dynamic
enum haxe.macro.Type
constructor TMono
eparam t Dynamic
constructor TEnum
eparam t Dynamic
eparam params Array<haxe.macro.Type>
constructor TInst
eparam t Dynamic
eparam params Array<haxe.macro.Type>
constructor TType
eparam t Dynamic
eparam params Array<haxe.macro.Type>
constructor TFun
eparam args Array<Dynamic>
eparam ret haxe.macro.Type
constructor TAnonymous
eparam a Dynamic
constructor TDynamic
eparam t haxe.macro.Type
constructor TLazy
eparam f fun<haxe.macro.Type>
constructor TAbstract
eparam t Dynamic
eparam params Array<haxe.macro.Type>
enum haxe.macro.ImportMode
constructor INormal
constructor IAsName
eparam alias String
constructor IAll
class haxe.macro.Error
function pub m new void
arg m : String
arg p : Dynamic
var pub m message String
var pub m pos Dynamic
function priv m toString String
enum haxe.macro.TypeDefKind
constructor TDEnum
constructor TDStructure
constructor TDClass
eparam superClass Dynamic
eparam interfaces Array<Dynamic>
eparam isInterface Null<bool>
constructor TDAlias
eparam t haxe.macro.ComplexType
constructor TDAbstract
eparam tthis haxe.macro.ComplexType
eparam from Array<haxe.macro.ComplexType>
eparam to Array<haxe.macro.ComplexType>
enum haxe.macro.FieldType
constructor FVar
eparam t haxe.macro.ComplexType
eparam e Dynamic
constructor FFun
eparam f Dynamic
constructor FProp
eparam get String
eparam set String
eparam t haxe.macro.ComplexType
eparam e Dynamic
enum haxe.macro.Access
constructor APublic
constructor APrivate
constructor AStatic
constructor AOverride
constructor ADynamic
constructor AInline
constructor AMacro
enum haxe.macro.TypeParam
constructor TPType
eparam t haxe.macro.ComplexType
constructor TPExpr
eparam e Dynamic
enum haxe.macro.ComplexType
constructor TPath
eparam p Dynamic
constructor TFunction
eparam args Array<haxe.macro.ComplexType>
eparam ret haxe.macro.ComplexType
constructor TAnonymous
eparam fields Array<Dynamic>
constructor TParent
eparam t haxe.macro.ComplexType
constructor TExtend
eparam p Array<Dynamic>
eparam fields Array<Dynamic>
constructor TOptional
eparam t haxe.macro.ComplexType
enum haxe.macro.ExprDef
constructor EConst
eparam c haxe.macro.Constant
constructor EArray
eparam e1 Dynamic
eparam e2 Dynamic
constructor EBinop
eparam op haxe.macro.Binop
eparam e1 Dynamic
eparam e2 Dynamic
constructor EField
eparam e Dynamic
eparam field String
constructor EParenthesis
eparam e Dynamic
constructor EObjectDecl
eparam fields Array<Dynamic>
constructor EArrayDecl
eparam values Array<Dynamic>
constructor ECall
eparam e Dynamic
eparam params Array<Dynamic>
constructor ENew
eparam t Dynamic
eparam params Array<Dynamic>
constructor EUnop
eparam op haxe.macro.Unop
eparam postFix bool
eparam e Dynamic
constructor EVars
eparam vars Array<Dynamic>
constructor EFunction
eparam name String
eparam f Dynamic
constructor EBlock
eparam exprs Array<Dynamic>
constructor EFor
eparam it Dynamic
eparam expr Dynamic
constructor EIn
eparam e1 Dynamic
eparam e2 Dynamic
constructor EIf
eparam econd Dynamic
eparam eif Dynamic
eparam eelse Dynamic
constructor EWhile
eparam econd Dynamic
eparam e Dynamic
eparam normalWhile bool
constructor ESwitch
eparam e Dynamic
eparam cases Array<Dynamic>
eparam edef Dynamic
constructor ETry
eparam e Dynamic
eparam catches Array<Dynamic>
constructor EReturn
eparam e Dynamic
constructor EBreak
constructor EContinue
constructor EUntyped
eparam e Dynamic
constructor EThrow
eparam e Dynamic
constructor ECast
eparam e Dynamic
eparam t haxe.macro.ComplexType
constructor EDisplay
eparam e Dynamic
eparam isCall bool
constructor EDisplayNew
eparam t Dynamic
constructor ETernary
eparam econd Dynamic
eparam eif Dynamic
eparam eelse Dynamic
constructor ECheckType
eparam e Dynamic
eparam t haxe.macro.ComplexType
constructor EMeta
eparam s Dynamic
eparam e Dynamic
enum haxe.macro.Unop
constructor OpIncrement
constructor OpDecrement
constructor OpNot
constructor OpNeg
constructor OpNegBits
enum haxe.macro.Binop
constructor OpAdd
constructor OpMult
constructor OpDiv
constructor OpSub
constructor OpAssign
constructor OpEq
constructor OpNotEq
constructor OpGt
constructor OpGte
constructor OpLt
constructor OpLte
constructor OpAnd
constructor OpOr
constructor OpXor
constructor OpBoolAnd
constructor OpBoolOr
constructor OpShl
constructor OpShr
constructor OpUShr
constructor OpMod
constructor OpAssignOp
eparam op haxe.macro.Binop
constructor OpInterval
constructor OpArrow
enum haxe.macro.Constant
constructor CInt
eparam v String
constructor CFloat
eparam f String
constructor CString
eparam s String
constructor CIdent
eparam s String
constructor CRegexp
eparam r String
eparam opt String
class haxe.macro.Context
class haxe.macro.Compiler
class haxe.io.StringInput
super haxe.io.BytesInput
function pub m new void
arg s : String
class haxe.io.Path
function pub m new void
arg path : String
var pub m dir String
var pub m file String
var pub m ext String
var pub m backslash bool
function pub m toString String
function pub s withoutExtension String
arg path : String
function pub s withoutDirectory String
arg path : String
function pub s directory String
arg path : String
function pub s extension String
arg path : String
function pub s withExtension String
arg path : String
arg ext : String
function pub s join String
arg paths : Array<String>
function pub s normalize String
arg path : String
function pub s addTrailingSlash String
arg path : String
function pub s removeTrailingSlashes String
arg path : String
function pub s isAbsolute bool
arg path : String
function priv s unescape String
arg path : String
function priv s escape String
arg path : String
arg allowSlashes ? bool
class haxe.io.FPHelper
var priv s i64tmp cpp::Int64Struct
inlinevar LN2 float
function pub s i32ToFloat float
arg i : int
function pub s floatToI32 int
arg f : float
function pub s i64ToDouble float
arg low : int
arg high : int
function pub s doubleToI64 cpp::Int64Struct
arg v : float
enum haxe.io.Error
constructor Blocked
constructor Overflow
constructor OutsideBounds
constructor Custom
eparam e Dynamic
class haxe.io.Eof
function pub m new void
function priv m toString String
class haxe.io.BytesOutput
super haxe.io.Output
function pub m new void
var priv m b haxe.io.BytesBuffer
property pub m c ! length int
function priv m get_length int
function pub m writeByte void
arg c : int
function pub m writeBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
function pub m getBytes haxe.io.Bytes
class haxe.io.Output
property pub m v c bigEndian bool
function pub m writeByte void
arg c : int
function pub m writeBytes int
arg s : haxe.io.Bytes
arg pos : int
arg len : int
function pub m flush void
function pub m close void
function priv m set_bigEndian bool
arg b : bool
function pub m write void
arg s : haxe.io.Bytes
function pub m writeFullBytes void
arg s : haxe.io.Bytes
arg pos : int
arg len : int
function pub m writeFloat void
arg x : float
function pub m writeDouble void
arg x : float
function pub m writeInt8 void
arg x : int
function pub m writeInt16 void
arg x : int
function pub m writeUInt16 void
arg x : int
function pub m writeInt24 void
arg x : int
function pub m writeUInt24 void
arg x : int
function pub m writeInt32 void
arg x : int
function pub m prepare void
arg nbytes : int
function pub m writeInput void
arg i : haxe.io.Input
arg bufsize ? Null<int>
function pub m writeString void
arg s : String
class haxe.io.BytesInput
super haxe.io.Input
function pub m new void
arg b : haxe.io.Bytes
arg pos ? Null<int>
arg len ? Null<int>
var priv m b Array<uint8>
var priv m pos int
var priv m len int
var priv m totlen int
property pub m c c position int
property pub m c ! length int
function priv m get_position int
function priv m get_length int
function priv m set_position int
arg p : int
function pub m readByte int
function pub m readBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
class haxe.io.BytesBuffer
function pub m new void
var priv m b Array<uint8>
property pub m c ! length int
function priv m get_length int
function pub m addByte void
arg byte : int
function pub m add void
arg src : haxe.io.Bytes
function pub m addString void
arg v : String
function pub m addInt32 void
arg v : int
function pub m addInt64 void
arg v : cpp::Int64Struct
function pub m addFloat void
arg v : float
function pub m addDouble void
arg v : float
function pub m addBytes void
arg src : haxe.io.Bytes
arg pos : int
arg len : int
function pub m getBytes haxe.io.Bytes
class haxe.io.BufferInput
super haxe.io.Input
function pub m new void
arg i : haxe.io.Input
arg buf : haxe.io.Bytes
arg pos ? Null<int>
arg available ? Null<int>
var pub m i haxe.io.Input
var pub m buf haxe.io.Bytes
var pub m available int
var pub m pos int
function pub m refill void
function pub m readByte int
function pub m readBytes int
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
class haxe.io.Input
property pub m v c bigEndian bool
function pub m readByte int
function pub m readBytes int
arg s : haxe.io.Bytes
arg pos : int
arg len : int
function pub m close void
function priv m set_bigEndian bool
arg b : bool
function pub m readAll haxe.io.Bytes
arg bufsize ? Null<int>
function pub m readFullBytes void
arg s : haxe.io.Bytes
arg pos : int
arg len : int
function pub m read haxe.io.Bytes
arg nbytes : int
function pub m readUntil String
arg end : int
function pub m readLine String
function pub m readFloat float
function pub m readDouble float
function pub m readInt8 int
function pub m readInt16 int
function pub m readUInt16 int
function pub m readInt24 int
function pub m readUInt24 int
function pub m readInt32 int
function pub m readString String
arg len : int
var priv s _float_of_bytes Dynamic
var priv s _double_of_bytes Dynamic
class haxe.format.JsonPrinter
function priv m new void
arg replacer : fun<Dynamic,Dynamic,Dynamic>
arg space : String
var priv m buf StringBuf
var priv m replacer fun<Dynamic,Dynamic,Dynamic>
var priv m indent String
var priv m pretty bool
var priv m nind int
function priv m ipad void
function priv m newl void
function priv m write void
arg k : Dynamic
arg v : Dynamic
function priv m objString void
arg v : Dynamic
function priv m fieldsString void
arg v : Dynamic
arg fields : Array<String>
function priv m quote void
arg s : String
function priv m quoteUtf8 void
arg s : String
function pub s print String
arg o : Dynamic
arg replacer ? fun<Dynamic,Dynamic,Dynamic>
arg space ? String
class haxe.format.JsonParser
function priv m new void
arg str : String
var priv m str String
var priv m pos int
function priv m parseRec Dynamic
function priv m parseString String
function priv m parseNumber Dynamic
arg c : int
function priv m nextChar int
function priv m invalidChar void
function priv m invalidNumber void
arg start : int
function pub s parse Dynamic
arg str : String
class haxe.ds.WeakMap
implements haxe.IMap
function pub m new void
var priv m h Dynamic
function pub m set void
arg key : Dynamic
arg value : Dynamic
function pub m get Dynamic
arg key : Dynamic
function pub m exists bool
arg key : Dynamic
function pub m remove bool
arg key : Dynamic
function pub m keys Dynamic
function pub m iterator Dynamic
function pub m toString String
class haxe.ds._Vector.Vector_Impl_
function pub s _new Array<Dynamic>
arg length : int
function pub s get Dynamic
arg this : Array<Dynamic>
arg index : int
function pub s set Dynamic
arg this : Array<Dynamic>
arg index : int
arg val : Dynamic
property pub s c ! length int
function priv s get_length int
arg this : Array<Dynamic>
function pub s blit void
arg src : Array<Dynamic>
arg srcPos : int
arg dest : Array<Dynamic>
arg destPos : int
arg len : int
function pub s toArray Array<Dynamic>
arg this : Array<Dynamic>
function pub s toData Array<Dynamic>
arg this : Array<Dynamic>
function pub s fromData Array<Dynamic>
arg data : Array<Dynamic>
function pub s fromArrayCopy Array<Dynamic>
arg array : Array<Dynamic>
class haxe.ds.StringMap
implements haxe.IMap
function pub m new void
var priv m h Dynamic
function pub m set void
arg key : String
arg value : Dynamic
function pub m get Dynamic
arg key : String
function pub m exists bool
arg key : String
function pub m remove bool
arg key : String
function pub m keys Dynamic
function pub m iterator Dynamic
function pub m toString String
enum haxe.ds.Option
constructor Some
eparam v Dynamic
constructor None
class haxe.ds.ObjectMap
implements haxe.IMap
function pub m new void
var priv m h Dynamic
function pub m set void
arg key : Dynamic
arg value : Dynamic
function pub m get Dynamic
arg key : Dynamic
function pub m exists bool
arg key : Dynamic
function pub m remove bool
arg key : Dynamic
function pub m keys Dynamic
function pub m iterator Dynamic
function pub m toString String
class haxe.ds.IntMap
implements haxe.IMap
function pub m new void
var priv m h Dynamic
function pub m set void
arg key : int
arg value : Dynamic
function pub m get Dynamic
arg key : int
function pub m exists bool
arg key : int
function pub m remove bool
arg key : int
function pub m keys Dynamic
function pub m iterator Dynamic
function pub m toString String
class haxe.ds._HashMap.HashMapData
function pub m new void
var pub m keys haxe.ds.IntMap
var pub m values haxe.ds.IntMap
class haxe.ds._HashMap.HashMap_Impl_
function pub s _new haxe.ds._HashMap.HashMapData
function pub s set void
arg this : haxe.ds._HashMap.HashMapData
arg k : Dynamic
arg v : Dynamic
function pub s get Dynamic
arg this : haxe.ds._HashMap.HashMapData
arg k : Dynamic
function pub s exists bool
arg this : haxe.ds._HashMap.HashMapData
arg k : Dynamic
function pub s remove bool
arg this : haxe.ds._HashMap.HashMapData
arg k : Dynamic
function pub s keys Dynamic
arg this : haxe.ds._HashMap.HashMapData
function pub s iterator Dynamic
arg this : haxe.ds._HashMap.HashMapData
class haxe.ds.GenericStack
function pub m new void
var pub m head haxe.ds.GenericCell
function pub m add void
arg item : Dynamic
function pub m first Dynamic
function pub m pop Dynamic
function pub m isEmpty bool
function pub m remove bool
arg v : Dynamic
function pub m iterator Dynamic
function pub m toString String
class haxe.ds._GenericStack.GenericStackIterator
super cpp.FastIterator
function pub m new void
arg head : haxe.ds.GenericCell
var pub m current haxe.ds.GenericCell
function pub m hasNext bool
function pub m next Dynamic
class haxe.ds.GenericCell
function pub m new void
arg elt : Dynamic
arg next : haxe.ds.GenericCell
var pub m elt Dynamic
var pub m next haxe.ds.GenericCell
class haxe.ds.EnumValueMap
super haxe.ds.BalancedTree
implements haxe.IMap
function pub m new Dynamic
function priv m compare int
arg _tmp_k1 : Dynamic
arg _tmp_k2 : Dynamic
function priv m compareArgs int
arg a1 : Array<Dynamic>
arg a2 : Array<Dynamic>
function priv m compareArg int
arg v1 : Dynamic
arg v2 : Dynamic
class haxe.ds.TreeNode
function pub m new void
arg l : haxe.ds.TreeNode
arg k : Dynamic
arg v : Dynamic
arg r : haxe.ds.TreeNode
arg h ? int
var pub m left haxe.ds.TreeNode
var pub m right haxe.ds.TreeNode
var pub m key Dynamic
var pub m value Dynamic
var priv m _height int
function pub m toString String
class haxe.ds.BalancedTree
function pub m new void
var priv m root haxe.ds.TreeNode
function pub m set void
arg key : Dynamic
arg value : Dynamic
function pub m get Dynamic
arg key : Dynamic
function pub m remove bool
arg key : Dynamic
function pub m exists bool
arg key : Dynamic
function pub m iterator Dynamic
function pub m keys Dynamic
function priv m setLoop haxe.ds.TreeNode
arg k : Dynamic
arg v : Dynamic
arg node : haxe.ds.TreeNode
function priv m removeLoop haxe.ds.TreeNode
arg k : Dynamic
arg node : haxe.ds.TreeNode
function priv m iteratorLoop void
arg node : haxe.ds.TreeNode
arg acc : Array<Dynamic>
function priv m keysLoop void
arg node : haxe.ds.TreeNode
arg acc : Array<Dynamic>
function priv m merge haxe.ds.TreeNode
arg t1 : haxe.ds.TreeNode
arg t2 : haxe.ds.TreeNode
function priv m minBinding haxe.ds.TreeNode
arg t : haxe.ds.TreeNode
function priv m removeMinBinding haxe.ds.TreeNode
arg t : haxe.ds.TreeNode
function priv m balance haxe.ds.TreeNode
arg l : haxe.ds.TreeNode
arg k : Dynamic
arg v : Dynamic
arg r : haxe.ds.TreeNode
function priv m compare int
arg k1 : Dynamic
arg k2 : Dynamic
function pub m toString String
class haxe.ds.ArraySort
function pub s sort void
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
function priv s rec void
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg from : int
arg to : int
function priv s doMerge void
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg from : int
arg pivot : int
arg to : int
arg len1 : int
arg len2 : int
function priv s rotate void
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg from : int
arg mid : int
arg to : int
function priv s gcd int
arg m : int
arg n : int
function priv s upper int
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg from : int
arg to : int
arg val : int
function priv s lower int
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg from : int
arg to : int
arg val : int
function priv s swap void
arg a : Array<Dynamic>
arg i : int
arg j : int
function priv s compare int
arg a : Array<Dynamic>
arg cmp : fun<Dynamic,Dynamic,int>
arg i : int
arg j : int
class haxe.crypto.Sha256
function pub m new void
function priv m doEncode Array<int>
arg m : Array<int>
arg l : int
function priv m S int
arg X : int
arg n : int
function priv m R int
arg X : int
arg n : int
function priv m Ch int
arg x : int
arg y : int
arg z : int
function priv m Maj int
arg x : int
arg y : int
arg z : int
function priv m Sigma0256 int
arg x : int
function priv m Sigma1256 int
arg x : int
function priv m Gamma0256 int
arg x : int
function priv m Gamma1256 int
arg x : int
function priv m safeAdd int
arg x : int
arg y : int
function priv m hex String
arg a : Array<int>
function pub s encode String
arg s : String
function pub s make haxe.io.Bytes
arg b : haxe.io.Bytes
function priv s str2blks Array<int>
arg s : String
function priv s bytes2blks Array<int>
arg b : haxe.io.Bytes
class haxe.crypto.Sha1
function priv m new void
function priv m doEncode Array<int>
arg x : Array<int>
function priv m rol int
arg num : int
arg cnt : int
function priv m ft int
arg t : int
arg b : int
arg c : int
arg d : int
function priv m kt int
arg t : int
function priv m hex String
arg a : Array<int>
function pub s encode String
arg s : String
function pub s make haxe.io.Bytes
arg b : haxe.io.Bytes
function priv s str2blks Array<int>
arg s : String
function priv s bytes2blks Array<int>
arg b : haxe.io.Bytes
class haxe.crypto.Md5
function priv m new void
function priv m bitOR int
arg a : int
arg b : int
function priv m bitXOR int
arg a : int
arg b : int
function priv m bitAND int
arg a : int
arg b : int
function priv m addme int
arg x : int
arg y : int
function priv m hex String
arg a : Array<int>
function priv m rol int
arg num : int
arg cnt : int
function priv m cmn int
arg q : int
arg a : int
arg b : int
arg x : int
arg s : int
arg t : int
function priv m ff int
arg a : int
arg b : int
arg c : int
arg d : int
arg x : int
arg s : int
arg t : int
function priv m gg int
arg a : int
arg b : int
arg c : int
arg d : int
arg x : int
arg s : int
arg t : int
function priv m hh int
arg a : int
arg b : int
arg c : int
arg d : int
arg x : int
arg s : int
arg t : int
function priv m ii int
arg a : int
arg b : int
arg c : int
arg d : int
arg x : int
arg s : int
arg t : int
function priv m doEncode Array<int>
arg x : Array<int>
function pub s encode String
arg s : String
function pub s make haxe.io.Bytes
arg b : haxe.io.Bytes
function priv s bytes2blks Array<int>
arg b : haxe.io.Bytes
function priv s str2blks Array<int>
arg str : String
class haxe.crypto.Hmac
function pub m new void
arg hashMethod : haxe.crypto.HashMethod
var priv m method haxe.crypto.HashMethod
var priv m blockSize int
var priv m length int
function priv m doHash haxe.io.Bytes
arg b : haxe.io.Bytes
function priv m nullPad haxe.io.Bytes
arg s : haxe.io.Bytes
arg chunkLen : int
function pub m make haxe.io.Bytes
arg key : haxe.io.Bytes
arg msg : haxe.io.Bytes
enum haxe.crypto.HashMethod
constructor MD5
constructor SHA1
constructor SHA256
class haxe.crypto.Crc32
function pub m new void
var priv m crc int
function pub m byte void
arg b : int
function pub m update void
arg b : haxe.io.Bytes
arg pos : int
arg len : int
function pub m get int
function pub s make int
arg data : haxe.io.Bytes
class haxe.crypto.BaseCode
function pub m new void
arg base : haxe.io.Bytes
var priv m base haxe.io.Bytes
var priv m nbits int
var priv m tbl Array<int>
function pub m encodeBytes haxe.io.Bytes
arg b : haxe.io.Bytes
function priv m initTable void
function pub m decodeBytes haxe.io.Bytes
arg b : haxe.io.Bytes
function pub m encodeString String
arg s : String
function pub m decodeString String
arg s : String
function pub s encode String
arg s : String
arg base : String
function pub s decode String
arg s : String
arg base : String
class haxe.crypto.Base64
property pub s v 0 CHARS String
property pub s v 0 BYTES haxe.io.Bytes
function pub s encode String
arg bytes : haxe.io.Bytes
arg complement ? bool
function pub s decode haxe.io.Bytes
arg str : String
arg complement ? bool
class haxe.io.Bytes
function priv m new void
arg length : int
arg b : Array<uint8>
property pub m v 0 length int
var priv m b Array<uint8>
function pub m get int
arg pos : int
function pub m set void
arg pos : int
arg v : int
function pub m blit void
arg pos : int
arg src : haxe.io.Bytes
arg srcpos : int
arg len : int
function pub m fill void
arg pos : int
arg len : int
arg value : int
function pub m sub haxe.io.Bytes
arg pos : int
arg len : int
function pub m compare int
arg other : haxe.io.Bytes
function pub m getDouble float
arg pos : int
function pub m getFloat float
arg pos : int
function pub m setDouble void
arg pos : int
arg v : float
function pub m setFloat void
arg pos : int
arg v : float
function pub m getUInt16 int
arg pos : int
function pub m setUInt16 void
arg pos : int
arg v : int
function pub m getInt32 int
arg pos : int
function pub m getInt64 cpp::Int64Struct
arg pos : int
function pub m setInt32 void
arg pos : int
arg v : int
function pub m setInt64 void
arg pos : int
arg v : cpp::Int64Struct
function pub m getString String
arg pos : int
arg len : int
function pub m readString String
arg pos : int
arg len : int
function pub m toString String
function pub m toHex String
function pub m getData Array<uint8>
function pub s alloc haxe.io.Bytes
arg length : int
function pub s ofString haxe.io.Bytes
arg s : String
function pub s ofData haxe.io.Bytes
arg b : Array<uint8>
function pub s fastGet int
arg b : Array<uint8>
arg pos : int
class haxe.crypto.Adler32
function pub m new void
var priv m a1 int
var priv m a2 int
function pub m get int
function pub m update void
arg b : haxe.io.Bytes
arg pos : int
arg len : int
function pub m equals bool
arg a : haxe.crypto.Adler32
function pub m toString String
function pub s read haxe.crypto.Adler32
arg i : haxe.io.Input
function pub s make int
arg b : haxe.io.Bytes
class haxe.Utf8
function pub m new void
arg size ? Null<int>
var priv m __s Array<int>
function pub m addChar void
arg c : int
function pub m toString String
function pub s encode String
arg s : String
function pub s decode String
arg s : String
function pub s iter void
arg s : String
arg chars : fun<int,void>
function pub s charCodeAt int
arg s : String
arg index : int
function pub s validate bool
arg s : String
function pub s length int
arg s : String
function pub s compare int
arg a : String
arg b : String
function pub s sub String
arg s : String
arg pos : int
arg len : int
class haxe.Unserializer
function pub m new void
arg buf : String
var priv m buf String
var priv m pos int
var priv m length int
var priv m cache Array<Dynamic>
var priv m scache Array<String>
var priv m resolver Dynamic
function pub m setResolver void
arg r : Dynamic
function pub m getResolver Dynamic
function priv m get int
arg p : int
function priv m readDigits int
function priv m readFloat float
function priv m unserializeObject void
arg o : Dynamic
function priv m unserializeEnum Dynamic
arg edecl : Enum
arg tag : String
function pub m unserialize Dynamic
var pub s DEFAULT_RESOLVER Dynamic
var priv s BASE64 String
var priv s CODES Array<int>
function priv s initCodes Array<int>
function pub s run Dynamic
arg v : String
class haxe.Template
function pub m new void
arg str : String
var priv m expr haxe._Template.TemplateExpr
var priv m context Dynamic
var priv m macros Dynamic
var priv m stack List
var priv m buf StringBuf
function pub m execute String
arg context : Dynamic
arg macros ? Dynamic
function priv m resolve Dynamic
arg v : String
function priv m parseTokens List
arg data : String
function priv m parseBlock haxe._Template.TemplateExpr
arg tokens : List
function priv m parse haxe._Template.TemplateExpr
arg tokens : List
function priv m parseExpr fun<Dynamic>
arg data : String
function priv m makeConst fun<Dynamic>
arg v : String
function priv m makePath fun<Dynamic>
arg e : fun<Dynamic>
arg l : List
function priv m makeExpr fun<Dynamic>
arg l : List
function priv m makeExpr2 fun<Dynamic>
arg l : List
function priv m run void
arg e : haxe._Template.TemplateExpr
var priv s splitter EReg
var priv s expr_splitter EReg
var priv s expr_trim EReg
var priv s expr_int EReg
var priv s expr_float EReg
var pub s globals Dynamic
enum haxe._Template.TemplateExpr
constructor OpVar
eparam v String
constructor OpExpr
eparam expr fun<Dynamic>
constructor OpIf
eparam expr fun<Dynamic>
eparam eif haxe._Template.TemplateExpr
eparam eelse haxe._Template.TemplateExpr
constructor OpStr
eparam str String
constructor OpBlock
eparam l List
constructor OpForeach
eparam expr fun<Dynamic>
eparam loop haxe._Template.TemplateExpr
constructor OpMacro
eparam name String
eparam params List
class haxe.Serializer
function pub m new void
var priv m buf StringBuf
var priv m cache Array<Dynamic>
var priv m shash haxe.ds.StringMap
var priv m scount int
var pub m useCache bool
var pub m useEnumIndex bool
function pub m toString String
function priv m serializeString void
arg s : String
function priv m serializeRef bool
arg v : Dynamic
function priv m serializeFields void
arg v : Dynamic
function pub m serialize void
arg v : Dynamic
function pub m serializeException void
arg e : Dynamic
var pub s USE_CACHE bool
var pub s USE_ENUM_INDEX bool
var priv s BASE64 String
function pub s run String
arg v : Dynamic
class haxe.Resource
function pub s listNames Array<String>
function pub s getString String
arg name : String
function pub s getBytes haxe.io.Bytes
arg name : String
class haxe.Log
dynamicfunction pub s trace void
arg v : Dynamic
arg infos ? Dynamic
class haxe.Json
function pub s parse Dynamic
arg text : String
function pub s stringify String
arg value : Dynamic
arg replacer ? fun<Dynamic,Dynamic,Dynamic>
arg space ? String
class haxe._Int64.Int64_Impl_
function pub s copy cpp::Int64Struct
arg this : cpp::Int64Struct
function pub s make cpp::Int64Struct
arg high : int
arg low : int
function pub s ofInt cpp::Int64Struct
arg x : int
function pub s toInt int
arg x : cpp::Int64Struct
function pub s is bool
arg val : Dynamic
function pub s getHigh int
arg x : cpp::Int64Struct
function pub s getLow int
arg x : cpp::Int64Struct
function pub s isNeg bool
arg x : cpp::Int64Struct
function pub s isZero bool
arg x : cpp::Int64Struct
function pub s compare int
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function pub s ucompare int
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function pub s toStr String
arg x : cpp::Int64Struct
function priv s toString String
arg this : cpp::Int64Struct
function pub s divMod Dynamic
arg dividend : cpp::Int64Struct
arg divisor : cpp::Int64Struct
function pub s neg cpp::Int64Struct
arg x : cpp::Int64Struct
function priv s preIncrement cpp::Int64Struct
arg this : cpp::Int64Struct
function priv s postIncrement cpp::Int64Struct
arg this : cpp::Int64Struct
function priv s preDecrement cpp::Int64Struct
arg this : cpp::Int64Struct
function priv s postDecrement cpp::Int64Struct
arg this : cpp::Int64Struct
function pub s add cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s addInt cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function pub s sub cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s subInt cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function priv s intSub cpp::Int64Struct
arg a : int
arg b : cpp::Int64Struct
function pub s mul cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s mulInt cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function pub s div cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s divInt cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function priv s intDiv cpp::Int64Struct
arg a : int
arg b : cpp::Int64Struct
function pub s mod cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s modInt cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function priv s intMod cpp::Int64Struct
arg a : int
arg b : cpp::Int64Struct
function pub s eq bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s eqInt bool
arg a : cpp::Int64Struct
arg b : int
function pub s neq bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s neqInt bool
arg a : cpp::Int64Struct
arg b : int
function priv s lt bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s ltInt bool
arg a : cpp::Int64Struct
arg b : int
function priv s intLt bool
arg a : int
arg b : cpp::Int64Struct
function priv s lte bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s lteInt bool
arg a : cpp::Int64Struct
arg b : int
function priv s intLte bool
arg a : int
arg b : cpp::Int64Struct
function priv s gt bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s gtInt bool
arg a : cpp::Int64Struct
arg b : int
function priv s intGt bool
arg a : int
arg b : cpp::Int64Struct
function priv s gte bool
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function priv s gteInt bool
arg a : cpp::Int64Struct
arg b : int
function priv s intGte bool
arg a : int
arg b : cpp::Int64Struct
function priv s complement cpp::Int64Struct
arg a : cpp::Int64Struct
function pub s and cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function pub s or cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function pub s xor cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : cpp::Int64Struct
function pub s shl cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function pub s shr cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
function pub s ushr cpp::Int64Struct
arg a : cpp::Int64Struct
arg b : int
property pub s c ! high int
function priv s get_high int
arg this : cpp::Int64Struct
property pub s c ! low int
function priv s get_low int
arg this : cpp::Int64Struct
class haxe._Int32.Int32_Impl_
function priv s preIncrement int
arg this : int
function priv s postIncrement int
arg this : int
function priv s preDecrement int
arg this : int
function priv s postDecrement int
arg this : int
function priv s add int
arg a : int
arg b : int
function priv s addInt int
arg a : int
arg b : int
function priv s sub int
arg a : int
arg b : int
function priv s subInt int
arg a : int
arg b : int
function priv s intSub int
arg a : int
arg b : int
function priv s toFloat float
arg this : int
function pub s ucompare int
arg a : int
arg b : int
function priv s clamp int
arg x : int
class haxe._EnumFlags.EnumFlags_Impl_
function pub s _new int
arg i ? int
function pub s has bool
arg this : int
arg v : Dynamic
function pub s set void
arg this : int
arg v : Dynamic
function pub s unset void
arg this : int
arg v : Dynamic
function pub s ofInt int
arg i : int
function pub s toInt int
arg this : int
interface haxe.IMap
function pub m get Dynamic
arg k : Dynamic
function pub m set void
arg k : Dynamic
arg v : Dynamic
function pub m exists bool
arg k : Dynamic
function pub m remove bool
arg k : Dynamic
function pub m keys Dynamic
function pub m iterator Dynamic
function pub m toString String
class haxe.CallStack
function pub s callStack Array<haxe.StackItem>
function pub s exceptionStack Array<haxe.StackItem>
function pub s toString String
arg stack : Array<haxe.StackItem>
function priv s itemToString void
arg b : StringBuf
arg s : haxe.StackItem
function priv s makeStack Array<haxe.StackItem>
arg s : Array<String>
enum haxe.StackItem
constructor CFunction
constructor Module
eparam m String
constructor FilePos
eparam s haxe.StackItem
eparam file String
eparam line int
constructor Method
eparam classname String
eparam method String
constructor LocalFunction
eparam v Null<int>
class cpp.vm.WeakRef
function pub m new void
arg inObject : Dynamic
arg inHard ? bool
var priv m ref Dynamic
var priv m hardRef bool
function pub m get Dynamic
function pub m set Dynamic
arg inObject : Dynamic
function pub m toString String
class cpp.vm.Unsafe
function pub s unsafeSet void
arg outForced : Dynamic
arg inValue : Dynamic
class cpp.vm.Tls
function pub m new void
var priv m mTLSID int
property pub m c c value Dynamic
function priv m get_value Dynamic
function priv m set_value Dynamic
arg v : Dynamic
var priv s sFreeSlot int
class cpp.vm.Thread
function priv m new void
arg h : Dynamic
property pub m v 0 handle Dynamic
function pub m sendMessage void
arg msg : Dynamic
function priv m __compare int
arg t : Dynamic
function pub s current cpp.vm.Thread
function pub s create cpp.vm.Thread
arg callb : fun<void>
function pub s readMessage Dynamic
arg block : bool
class cpp.vm.Profiler
function pub s start void
arg inDumpFile ? String
function pub s stop void
class cpp.vm.Mutex
function pub m new void
var priv m m Dynamic
function pub m acquire void
function pub m tryAcquire bool
function pub m release void
class cpp.vm.Lock
function pub m new void
var priv m l Dynamic
function pub m wait bool
arg timeout ? Null<float>
function pub m release void
class cpp.vm.Gc
inlinevar MEM_INFO_USAGE int
inlinevar MEM_INFO_RESERVED int
inlinevar MEM_INFO_CURRENT int
inlinevar MEM_INFO_LARGE int
function pub s enable void
arg inEnable : bool
function pub s run void
arg major : bool
function pub s compact void
function pub s memInfo int
arg inWhatInfo : int
function pub s memUsage int
function pub s trace int
arg sought : Class
arg printInstances ? bool
function pub s versionCheck bool
function pub s doNotKill void
arg inObject : Dynamic
function pub s getNextZombie Dynamic
function pub s safePoint void
function pub s enterGCFreeZone void
function pub s exitGCFreeZone void
function pub s setFinalizer void
arg inObject : Dynamic
arg inFinalizer : cpp.Function
class cpp.vm.ExecutionTrace
function pub s traceOff void
function pub s traceFunctions void
function pub s traceLines void
class cpp.vm.Deque
function pub m new void
var priv m q Dynamic
function pub m add void
arg i : Dynamic
function pub m push void
arg i : Dynamic
function pub m pop Dynamic
arg block : bool
class cpp.vm.Debugger
inlinevar THREAD_CREATED int
inlinevar THREAD_TERMINATED int
inlinevar THREAD_STARTED int
inlinevar THREAD_STOPPED int
inlinevar STEP_INTO int
inlinevar STEP_OVER int
inlinevar STEP_OUT int
var pub s NONEXISTENT_VALUE String
var pub s THREAD_NOT_STOPPED String
function pub s setEventNotificationHandler void
arg handler : fun<int,int,int,String,String,String,int,void>
function pub s enableCurrentThreadDebugging void
arg enabled : bool
function pub s getCurrentThreadNumber int
function pub s getFiles Array<String>
function pub s getFilesFullPath Array<String>
function pub s getClasses Array<String>
function pub s getThreadInfos Array<cpp.vm.ThreadInfo>
function pub s getThreadInfo cpp.vm.ThreadInfo
arg threadNumber : int
arg unsafe : bool
function pub s addFileLineBreakpoint int
arg file : String
arg line : int
function pub s addClassFunctionBreakpoint int
arg className : String
arg functionName : String
function pub s deleteBreakpoint void
arg number : Null<int>
function pub s breakNow void
arg wait ? bool
function pub s continueThreads void
arg specialThreadNumber : int
arg continueCount : int
function pub s stepThread void
arg threadNumber : int
arg stepType : int
arg stepCount ? int
function pub s getStackVariables Array<String>
arg threadNumber : int
arg stackFrameNumber : int
arg unsafe : bool
function pub s getStackVariableValue Dynamic
arg threadNumber : int
arg stackFrameNumber : int
arg name : String
arg unsafe : bool
function pub s setStackVariableValue Dynamic
arg threadNumber : int
arg stackFrameNumber : int
arg name : String
arg value : Dynamic
arg unsafe : bool
class cpp.vm.ThreadInfo
function pub m new void
arg number : int
arg status : int
arg breakpoint ? int
arg criticalErrorDescription ? String
property pub m v 0 number int
property pub m v 0 status int
property pub m v 0 breakpoint int
property pub m v 0 criticalErrorDescription String
property pub m v 0 stack Array<cpp.vm.StackFrame>
inlinevar STATUS_RUNNING int
inlinevar STATUS_STOPPED_BREAK_IMMEDIATE int
inlinevar STATUS_STOPPED_BREAKPOINT int
inlinevar STATUS_STOPPED_UNCAUGHT_EXCEPTION int
inlinevar STATUS_STOPPED_CRITICAL_ERROR int
class cpp.vm.StackFrame
function pub m new void
arg fileName : String
arg lineNumber : int
arg className : String
arg functionName : String
property pub m v 0 fileName String
property pub m v 0 lineNumber int
property pub m v 0 className String
property pub m v 0 functionName String
property pub m v 0 parameters Array<cpp.vm.Parameter>
class cpp.vm.Parameter
function pub m new void
arg name : String
arg value : Dynamic
property pub m v 0 name String
property pub m v 0 value Dynamic
interface cpp.rtti.FieldNumericIntegerLookup
interface cpp.rtti.FieldIntegerLookup
class cpp.net.ThreadServer
function pub m new void
var priv m threads Array<Dynamic>
var priv m sock sys.net.Socket
var priv m worker cpp.vm.Thread
var priv m timer cpp.vm.Thread
var pub m listen int
var pub m nthreads int
var pub m connectLag float
var pub m errorOutput haxe.io.Output
var pub m initialBufferSize int
var pub m maxBufferSize int
var pub m messageHeaderSize int
var pub m updateTime float
var pub m maxSockPerThread int
function priv m runThread void
arg t : Dynamic
function priv m readClientData void
arg c : Dynamic
function priv m loopThread void
arg t : Dynamic
function priv m doClientDisconnected void
arg s : Dynamic
arg c : Dynamic
function priv m runWorker void
function pub m work void
arg f : fun<void>
function priv m logError void
arg e : Dynamic
function priv m addClient void
arg sock : sys.net.Socket
function priv m refuseClient void
arg sock : sys.net.Socket
function priv m runTimer void
function priv m init void
function pub m addSocket void
arg s : sys.net.Socket
function pub m run void
arg host : String
arg port : int
function pub m sendData void
arg s : sys.net.Socket
arg data : String
function pub m stopClient void
arg s : sys.net.Socket
dynamicfunction pub m onError void
arg e : Dynamic
arg stack : Array<haxe.StackItem>
dynamicfunction pub m clientConnected Dynamic
arg s : sys.net.Socket
dynamicfunction pub m clientDisconnected void
arg c : Dynamic
dynamicfunction pub m readClientMessage Dynamic
arg c : Dynamic
arg buf : haxe.io.Bytes
arg pos : int
arg len : int
dynamicfunction pub m clientMessage void
arg c : Dynamic
arg msg : Dynamic
dynamicfunction pub m update void
dynamicfunction pub m afterEvent void
class cpp.net.Poll
function pub m new void
arg n : int
var priv m mPollHandle Dynamic
var pub m readIndexes Array<Dynamic>
var pub m writeIndexes Array<Dynamic>
function pub m prepare void
arg read : Array<sys.net.Socket>
arg write : Array<sys.net.Socket>
function pub m events void
arg t ? Null<float>
function pub m poll Array<sys.net.Socket>
arg a : Array<sys.net.Socket>
arg t ? Null<float>
var priv s socket_poll_alloc fun<int,Dynamic>
var priv s socket_poll fun<Array<sys.net.Socket>,Dynamic,Null<float>,Array<Dynamic>>
var priv s socket_poll_prepare fun<Dynamic,Array<sys.net.Socket>,Array<sys.net.Socket>,Array<Array<Dynamic>>>
var priv s socket_poll_events fun<Dynamic,Null<float>,Dynamic>
class cpp.link.StaticZlib
class cpp.link.StaticStd
class cpp.link.StaticSqlite
class cpp.link.StaticRegexp
class cpp.link.StaticMysql
class cpp.cppia.HostClasses
class cpp.cppia.Host
function pub s run void
arg source : String
function pub s main void
class cpp.Random
function pub m new void
var priv m r Dynamic
function pub m setSeed void
arg s : int
function pub m int int
arg max : int
function pub m float float
var priv s random_new fun<Dynamic>
var priv s random_set_seed fun<Dynamic,int,Dynamic>
var priv s random_int fun<Dynamic,int,int>
var priv s random_float fun<Dynamic,float>
class cpp.Prime
function pub s _loadPrime Dynamic
arg lib : String
arg prim : String
arg signature : String
arg quietFail ? bool
function pub s nekoInit bool
arg inModuleName : String
class cpp.Xml
function priv m new void
var priv m _nodeName String
var priv m _nodeValue String
var priv m _attributes Dynamic
var priv m _children Array<cpp.Xml>
var priv m _parent cpp.Xml
property pub m v 0 nodeType cpp.XmlType
property pub m c c nodeName String
property pub m c c nodeValue String
function priv m get_nodeName String
function priv m set_nodeName String
arg n : String
function priv m get_nodeValue String
function priv m set_nodeValue String
arg v : String
property pub m c 0 parent cpp.Xml
function priv m get_parent cpp.Xml
function pub m get String
arg att : String
function pub m set void
arg att : String
arg value : String
function pub m remove void
arg att : String
function pub m exists bool
arg att : String
function pub m attributes Dynamic
function pub m iterator Dynamic
function pub m elements Dynamic
function pub m elementsNamed Dynamic
arg name : String
function pub m firstChild cpp.Xml
function pub m firstElement cpp.Xml
function pub m addChild void
arg x : cpp.Xml
function pub m removeChild bool
arg x : cpp.Xml
function pub m insertChild void
arg x : cpp.Xml
arg pos : int
function pub m toString String
function priv m toStringRec void
arg s : StringBuf
property pub s v 0 Element cpp.XmlType
property pub s v 0 PCData cpp.XmlType
property pub s v 0 CData cpp.XmlType
property pub s v 0 Comment cpp.XmlType
property pub s v 0 DocType cpp.XmlType
property pub s v 0 ProcessingInstruction cpp.XmlType
property pub s v 0 Document cpp.XmlType
var priv s _parse fun<String,Dynamic,Dynamic>
function pub s parse cpp.Xml
arg str : String
function pub s createElement cpp.Xml
arg name : String
function pub s createPCData cpp.Xml
arg data : String
function pub s createCData cpp.Xml
arg data : String
function pub s createComment cpp.Xml
arg data : String
function pub s createDocType cpp.Xml
arg data : String
function pub s createProcessingInstruction cpp.Xml
arg data : String
function pub s createDocument cpp.Xml
enum cpp.XmlType
class cpp._ConstCharStar.ConstCharStar_Impl_
function priv s _new cpp.RawConstPointer
arg s : String
function pub s fromString cpp.RawConstPointer
arg s : String
class Xml
function priv m new void
arg nodeType : int
property pub m v 0 nodeType int
property pub m c c nodeName String
property pub m c c nodeValue String
property pub m v 0 parent Xml
var priv m children Array<Xml>
var priv m attributeMap haxe.ds.StringMap
function priv m get_nodeName String
function priv m set_nodeName String
arg v : String
function priv m get_nodeValue String
function priv m set_nodeValue String
arg v : String
function pub m get String
arg att : String
function pub m set void
arg att : String
arg value : String
function pub m remove void
arg att : String
function pub m exists bool
arg att : String
function pub m attributes Dynamic
function pub m iterator Dynamic
function pub m elements Dynamic
function pub m elementsNamed Dynamic
arg name : String
function pub m firstChild Xml
function pub m firstElement Xml
function pub m addChild void
arg x : Xml
function pub m removeChild bool
arg x : Xml
function pub m insertChild void
arg x : Xml
arg pos : int
function pub m toString String
function priv m ensureElementType void
property pub s v 0 Element int
property pub s v 0 PCData int
property pub s v 0 CData int
property pub s v 0 Comment int
property pub s v 0 DocType int
property pub s v 0 ProcessingInstruction int
property pub s v 0 Document int
function pub s parse Xml
arg str : String
function pub s createElement Xml
arg name : String
function pub s createPCData Xml
arg data : String
function pub s createCData Xml
arg data : String
function pub s createComment Xml
arg data : String
function pub s createDocType Xml
arg data : String
function pub s createProcessingInstruction Xml
arg data : String
function pub s createDocument Xml
class Type
function pub s getClass Class
arg o : Dynamic
function pub s getEnum Enum
arg o : Dynamic
function pub s getSuperClass Class
arg c : Class
function pub s getClassName String
arg c : Class
function pub s getEnumName String
arg e : Enum
function pub s resolveClass Class
arg name : String
function pub s resolveEnum Enum
arg name : String
function pub s createInstance Dynamic
arg cl : Class
arg args : Array<Dynamic>
function pub s createEmptyInstance Dynamic
arg cl : Class
function pub s createEnum Dynamic
arg e : Enum
arg constr : String
arg params ? Array<Dynamic>
function pub s createEnumIndex Dynamic
arg e : Enum
arg index : int
arg params ? Array<Dynamic>
function pub s getInstanceFields Array<String>
arg c : Class
function pub s getClassFields Array<String>
arg c : Class
function pub s getEnumConstructs Array<String>
arg e : Enum
function pub s typeof ValueType
arg v : Dynamic
function pub s enumEq bool
arg a : Dynamic
arg b : Dynamic
function pub s enumConstructor String
arg e : Dynamic
function pub s enumParameters Array<Dynamic>
arg e : Dynamic
function pub s enumIndex int
arg e : Dynamic
function pub s allEnums Array<Dynamic>
arg e : Enum
enum ValueType
constructor TNull
constructor TInt
constructor TFloat
constructor TBool
constructor TObject
constructor TFunction
constructor TClass
eparam c Class
constructor TEnum
eparam e Enum
constructor TUnknown
class Sys
function pub s print void
arg v : Dynamic
function pub s println void
arg v : Dynamic
function pub s stdin haxe.io.Input
function pub s stdout haxe.io.Output
function pub s stderr haxe.io.Output
function pub s getChar int
arg echo : bool
function pub s args Array<String>
function pub s getEnv String
arg s : String
function pub s putEnv void
arg s : String
arg v : String
function pub s sleep void
arg seconds : float
function pub s setTimeLocale bool
arg loc : String
function pub s getCwd String
function pub s setCwd void
arg s : String
function pub s systemName String
function priv s escapeArgument String
arg arg : String
function pub s command int
arg cmd : String
arg args ? Array<String>
function pub s exit void
arg code : int
function pub s time float
function pub s cpuTime float
function pub s executablePath String
function pub s environment haxe.ds.StringMap
var priv s get_env fun<String,String>
var priv s put_env fun<String,String,Dynamic>
var priv s _sleep fun<float,Dynamic>
var priv s set_time_locale fun<String,bool>
var priv s get_cwd fun<String>
var priv s set_cwd fun<String,Dynamic>
var priv s sys_string fun<String>
var priv s sys_command fun<String,int>
var priv s sys_time fun<float>
var priv s sys_cpu_time fun<float>
var priv s sys_exe_path fun<String>
var priv s sys_env fun<Array<String>>
var priv s file_stdin fun<Dynamic>
var priv s file_stdout fun<Dynamic>
var priv s file_stderr fun<Dynamic>
var priv s getch fun<bool,int>
class StringTools
function pub s urlEncode String
arg s : String
function pub s urlDecode String
arg s : String
function pub s htmlEscape String
arg s : String
arg quotes ? Null<bool>
function pub s htmlUnescape String
arg s : String
function pub s startsWith bool
arg s : String
arg start : String
function pub s endsWith bool
arg s : String
arg end : String
function pub s isSpace bool
arg s : String
arg pos : int
function pub s ltrim String
arg s : String
function pub s rtrim String
arg s : String
function pub s trim String
arg s : String
function pub s lpad String
arg s : String
arg c : String
arg l : int
function pub s rpad String
arg s : String
arg c : String
arg l : int
function pub s replace String
arg s : String
arg sub : String
arg by : String
function pub s hex String
arg n : int
arg digits ? Null<int>
function pub s fastCodeAt int
arg s : String
arg index : int
function pub s isEof bool
arg c : int
class StringBuf
function pub m new void
var priv m b Array<String>
property pub m c ! length int
function priv m get_length int
function pub m add void
arg x : Dynamic
function pub m addSub void
arg s : String
arg pos : int
arg len ? Null<int>
function pub m addChar void
arg c : int
function pub m toString String
class Std
function pub s is bool
arg v : Dynamic
arg t : Dynamic
function pub s instance Dynamic
arg value : Dynamic
arg c : Class
function pub s string String
arg s : Dynamic
function pub s int int
arg x : float
function pub s parseInt Null<int>
arg x : String
function pub s parseFloat float
arg x : String
function pub s random int
arg x : int
class Reflect
function pub s hasField bool
arg o : Dynamic
arg field : String
function pub s field Dynamic
arg o : Dynamic
arg field : String
function pub s setField void
arg o : Dynamic
arg field : String
arg value : Dynamic
function pub s getProperty Dynamic
arg o : Dynamic
arg field : String
function pub s setProperty void
arg o : Dynamic
arg field : String
arg value : Dynamic
function pub s callMethod Dynamic
arg o : Dynamic
arg func : Dynamic
arg args : Array<Dynamic>
function pub s fields Array<String>
arg o : Dynamic
function pub s isFunction bool
arg f : Dynamic
function pub s compare int
arg a : Dynamic
arg b : Dynamic
function pub s compareMethods bool
arg f1 : Dynamic
arg f2 : Dynamic
function pub s isObject bool
arg v : Dynamic
function pub s isEnumValue bool
arg v : Dynamic
function pub s deleteField bool
arg o : Dynamic
arg field : String
function pub s copy Dynamic
arg o : Dynamic
function pub s makeVarArgs Dynamic
arg f : fun<Array<Dynamic>,Dynamic>
class _Map.Map_Impl_
function pub s _new haxe.IMap
function pub s set void
arg this : haxe.IMap
arg key : Dynamic
arg value : Dynamic
function pub s get Dynamic
arg this : haxe.IMap
arg key : Dynamic
function pub s exists bool
arg this : haxe.IMap
arg key : Dynamic
function pub s remove bool
arg this : haxe.IMap
arg key : Dynamic
function pub s keys Dynamic
arg this : haxe.IMap
function pub s iterator Dynamic
arg this : haxe.IMap
function pub s toString String
arg this : haxe.IMap
function pub s arrayWrite Dynamic
arg this : haxe.IMap
arg k : Dynamic
arg v : Dynamic
function priv s toStringMap haxe.ds.StringMap
arg t : haxe.IMap
function priv s toIntMap haxe.ds.IntMap
arg t : haxe.IMap
function priv s toEnumValueMapMap haxe.ds.EnumValueMap
arg t : haxe.IMap
function priv s toObjectMap haxe.ds.ObjectMap
arg t : haxe.IMap
function priv s fromStringMap haxe.ds.StringMap
arg map : haxe.ds.StringMap
function priv s fromIntMap haxe.ds.IntMap
arg map : haxe.ds.IntMap
function priv s fromObjectMap haxe.ds.ObjectMap
arg map : haxe.ds.ObjectMap
class _List.ListIterator
function pub m new void
arg head : Array<Dynamic>
var priv m head Array<Dynamic>
var priv m val Dynamic
function pub m hasNext bool
function pub m next Dynamic
class List
function pub m new void
var priv m h Array<Dynamic>
var priv m q Array<Dynamic>
property pub m v 0 length int
function pub m add void
arg item : Dynamic
function pub m push void
arg item : Dynamic
function pub m first Dynamic
function pub m last Dynamic
function pub m pop Dynamic
function pub m isEmpty bool
function pub m clear void
function pub m remove bool
arg v : Dynamic
function pub m iterator _List.ListIterator
function pub m toString String
function pub m join String
arg sep : String
function pub m filter List
arg f : fun<Dynamic,bool>
function pub m map List
arg f : fun<Dynamic,Dynamic>
class Lambda
function pub s array Array<Dynamic>
arg it : Dynamic
function pub s list List
arg it : Dynamic
function pub s map List
arg it : Dynamic
arg f : fun<Dynamic,Dynamic>
function pub s mapi List
arg it : Dynamic
arg f : fun<int,Dynamic,Dynamic>
function pub s has bool
arg it : Dynamic
arg elt : Dynamic
function pub s exists bool
arg it : Dynamic
arg f : fun<Dynamic,bool>
function pub s foreach bool
arg it : Dynamic
arg f : fun<Dynamic,bool>
function pub s iter void
arg it : Dynamic
arg f : fun<Dynamic,void>
function pub s filter List
arg it : Dynamic
arg f : fun<Dynamic,bool>
function pub s fold Dynamic
arg it : Dynamic
arg f : fun<Dynamic,Dynamic,Dynamic>
arg first : Dynamic
function pub s count int
arg it : Dynamic
arg pred ? fun<Dynamic,bool>
function pub s empty bool
arg it : Dynamic
function pub s indexOf int
arg it : Dynamic
arg v : Dynamic
function pub s find Dynamic
arg it : Dynamic
arg f : fun<Dynamic,bool>
function pub s concat List
arg a : Dynamic
arg b : Dynamic
class IntIterator
function pub m new void
arg min : int
arg max : int
var priv m min int
var priv m max int
function pub m hasNext bool
function pub m next int
class HXCPPRuntimeHello
function pub s say_hello void
arg name : String
class HXCPPRuntimeCPPIA
function pub s run void
arg cppiaFile : String
class HXCPPRuntime
function pub s main void
class EReg
function pub m new void
arg r : String
arg opt : String
var priv m r Dynamic
var priv m last String
var priv m global bool
function pub m match bool
arg s : String
function pub m matched String
arg n : int
function pub m matchedLeft String
function pub m matchedRight String
function pub m matchedPos Dynamic
function pub m matchSub bool
arg s : String
arg pos : int
arg len ? int
function pub m split Array<String>
arg s : String
function pub m replace String
arg s : String
arg by : String
function pub m map String
arg s : String
arg f : fun<EReg,String>
var priv s regexp_new_options fun<String,String,Dynamic>
var priv s regexp_match fun<Dynamic,String,int,int,Dynamic>
var priv s regexp_matched fun<Dynamic,int,Dynamic>
var priv s regexp_matched_pos fun<Dynamic,int,Dynamic>
class cpp.Lib
function pub s load Dynamic
arg lib : String
arg prim : String
arg nargs : int
function pub s unloadAllLibraries int
function pub s _loadPrime Dynamic
arg lib : String
arg prim : String
arg signature : String
arg quietFail ? bool
function pub s loadLazy Dynamic
arg lib : String
arg prim : String
arg nargs : int
function pub s rethrow void
arg inExp : Dynamic
function pub s stringReference String
arg inBytes : haxe.io.Bytes
function pub s pushDllSearchPath void
arg inPath : String
function pub s getDllExtension String
function pub s getBinDirectory String
function pub s bytesReference haxe.io.Bytes
arg s : String
function pub s print void
arg v : Dynamic
function pub s haxeToNeko Dynamic
arg v : Dynamic
function pub s nekoToHaxe Dynamic
arg v : Dynamic
function pub s println void
arg v : Dynamic
function pub s setFloatFormat void
arg inFormat : String
class DateTools
function priv s __format_get String
arg d : Date
arg e : String
function priv s __format String
arg d : Date
arg f : String
function pub s format String
arg d : Date
arg f : String
function pub s delta Date
arg d : Date
arg t : float
var priv s DAYS_OF_MONTH Array<int>
function pub s getMonthDays int
arg d : Date
function pub s seconds float
arg n : float
function pub s minutes float
arg n : float
function pub s hours float
arg n : float
function pub s days float
arg n : float
function pub s parse Dynamic
arg t : float
function pub s make float
arg o : Dynamic
function pub s makeUtc float
arg year : int
arg month : int
arg day : int
arg hour : int
arg min : int
arg sec : int
class Date
function pub m new void
arg year : int
arg month : int
arg day : int
arg hour : int
arg min : int
arg sec : int
var priv m mSeconds float
function pub m getTime float
function pub m getHours int
function pub m getMinutes int
function pub m getSeconds int
function pub m getFullYear int
function pub m getMonth int
function pub m getDate int
function pub m getDay int
function pub m toString String
function pub s now Date
function priv s new1 Date
arg t : Dynamic
function pub s fromTime Date
arg t : float
function pub s fromString Date
arg s : String
file /usr/lib/haxe/std/DateTools.hx /usr/lib/haxe/std/DateTools.hx
file /usr/lib/haxe/std/IntIterator.hx /usr/lib/haxe/std/IntIterator.hx
file /usr/lib/haxe/std/Lambda.hx /usr/lib/haxe/std/Lambda.hx
file /usr/lib/haxe/std/List.hx /usr/lib/haxe/std/List.hx
file /usr/lib/haxe/std/Map.hx /usr/lib/haxe/std/Map.hx
file /usr/lib/haxe/std/StringTools.hx /usr/lib/haxe/std/StringTools.hx
file /usr/lib/haxe/std/Xml.hx /usr/lib/haxe/std/Xml.hx
file /usr/lib/haxe/std/cpp/ConstCharStar.hx /usr/lib/haxe/std/cpp/ConstCharStar.hx
file /usr/lib/haxe/std/cpp/Lib.hx /usr/lib/haxe/std/cpp/Lib.hx
file /usr/lib/haxe/std/cpp/NativeXml.hx /usr/lib/haxe/std/cpp/NativeXml.hx
file /usr/lib/haxe/std/cpp/Prime.hx /usr/lib/haxe/std/cpp/Prime.hx
file /usr/lib/haxe/std/cpp/Random.hx /usr/lib/haxe/std/cpp/Random.hx
file /usr/lib/haxe/std/cpp/_std/Date.hx /usr/lib/haxe/std/cpp/_std/Date.hx
file /usr/lib/haxe/std/cpp/_std/EReg.hx /usr/lib/haxe/std/cpp/_std/EReg.hx
file /usr/lib/haxe/std/cpp/_std/Reflect.hx /usr/lib/haxe/std/cpp/_std/Reflect.hx
file /usr/lib/haxe/std/cpp/_std/Std.hx /usr/lib/haxe/std/cpp/_std/Std.hx
file /usr/lib/haxe/std/cpp/_std/StringBuf.hx /usr/lib/haxe/std/cpp/_std/StringBuf.hx
file /usr/lib/haxe/std/cpp/_std/Sys.hx /usr/lib/haxe/std/cpp/_std/Sys.hx
file /usr/lib/haxe/std/cpp/_std/Type.hx /usr/lib/haxe/std/cpp/_std/Type.hx
file /usr/lib/haxe/std/cpp/_std/haxe/Int64.hx /usr/lib/haxe/std/cpp/_std/haxe/Int64.hx
file /usr/lib/haxe/std/cpp/_std/haxe/Resource.hx /usr/lib/haxe/std/cpp/_std/haxe/Resource.hx
file /usr/lib/haxe/std/cpp/_std/haxe/Utf8.hx /usr/lib/haxe/std/cpp/_std/haxe/Utf8.hx
file /usr/lib/haxe/std/cpp/_std/haxe/ds/IntMap.hx /usr/lib/haxe/std/cpp/_std/haxe/ds/IntMap.hx
file /usr/lib/haxe/std/cpp/_std/haxe/ds/ObjectMap.hx /usr/lib/haxe/std/cpp/_std/haxe/ds/ObjectMap.hx
file /usr/lib/haxe/std/cpp/_std/haxe/ds/StringMap.hx /usr/lib/haxe/std/cpp/_std/haxe/ds/StringMap.hx
file /usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx /usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx
file /usr/lib/haxe/std/cpp/_std/haxe/zip/Compress.hx /usr/lib/haxe/std/cpp/_std/haxe/zip/Compress.hx
file /usr/lib/haxe/std/cpp/_std/haxe/zip/Uncompress.hx /usr/lib/haxe/std/cpp/_std/haxe/zip/Uncompress.hx
file /usr/lib/haxe/std/cpp/_std/sys/FileSystem.hx /usr/lib/haxe/std/cpp/_std/sys/FileSystem.hx
file /usr/lib/haxe/std/cpp/_std/sys/db/Mysql.hx /usr/lib/haxe/std/cpp/_std/sys/db/Mysql.hx
file /usr/lib/haxe/std/cpp/_std/sys/db/Sqlite.hx /usr/lib/haxe/std/cpp/_std/sys/db/Sqlite.hx
file /usr/lib/haxe/std/cpp/_std/sys/io/File.hx /usr/lib/haxe/std/cpp/_std/sys/io/File.hx
file /usr/lib/haxe/std/cpp/_std/sys/io/FileInput.hx /usr/lib/haxe/std/cpp/_std/sys/io/FileInput.hx
file /usr/lib/haxe/std/cpp/_std/sys/io/FileOutput.hx /usr/lib/haxe/std/cpp/_std/sys/io/FileOutput.hx
file /usr/lib/haxe/std/cpp/_std/sys/io/Process.hx /usr/lib/haxe/std/cpp/_std/sys/io/Process.hx
file /usr/lib/haxe/std/cpp/_std/sys/net/Host.hx /usr/lib/haxe/std/cpp/_std/sys/net/Host.hx
file /usr/lib/haxe/std/cpp/_std/sys/net/Socket.hx /usr/lib/haxe/std/cpp/_std/sys/net/Socket.hx
file /usr/lib/haxe/std/cpp/cppia/Host.hx /usr/lib/haxe/std/cpp/cppia/Host.hx
file /usr/lib/haxe/std/cpp/link/StaticMysql.hx /usr/lib/haxe/std/cpp/link/StaticMysql.hx
file /usr/lib/haxe/std/cpp/link/StaticRegexp.hx /usr/lib/haxe/std/cpp/link/StaticRegexp.hx
file /usr/lib/haxe/std/cpp/link/StaticSqlite.hx /usr/lib/haxe/std/cpp/link/StaticSqlite.hx
file /usr/lib/haxe/std/cpp/link/StaticStd.hx /usr/lib/haxe/std/cpp/link/StaticStd.hx
file /usr/lib/haxe/std/cpp/link/StaticZlib.hx /usr/lib/haxe/std/cpp/link/StaticZlib.hx
file /usr/lib/haxe/std/cpp/net/Poll.hx /usr/lib/haxe/std/cpp/net/Poll.hx
file /usr/lib/haxe/std/cpp/net/ThreadServer.hx /usr/lib/haxe/std/cpp/net/ThreadServer.hx
file /usr/lib/haxe/std/cpp/vm/Debugger.hx /usr/lib/haxe/std/cpp/vm/Debugger.hx
file /usr/lib/haxe/std/cpp/vm/Deque.hx /usr/lib/haxe/std/cpp/vm/Deque.hx
file /usr/lib/haxe/std/cpp/vm/ExecutionTrace.hx /usr/lib/haxe/std/cpp/vm/ExecutionTrace.hx
file /usr/lib/haxe/std/cpp/vm/Gc.hx /usr/lib/haxe/std/cpp/vm/Gc.hx
file /usr/lib/haxe/std/cpp/vm/Lock.hx /usr/lib/haxe/std/cpp/vm/Lock.hx
file /usr/lib/haxe/std/cpp/vm/Mutex.hx /usr/lib/haxe/std/cpp/vm/Mutex.hx
file /usr/lib/haxe/std/cpp/vm/Profiler.hx /usr/lib/haxe/std/cpp/vm/Profiler.hx
file /usr/lib/haxe/std/cpp/vm/Thread.hx /usr/lib/haxe/std/cpp/vm/Thread.hx
file /usr/lib/haxe/std/cpp/vm/Tls.hx /usr/lib/haxe/std/cpp/vm/Tls.hx
file /usr/lib/haxe/std/cpp/vm/Unsafe.hx /usr/lib/haxe/std/cpp/vm/Unsafe.hx
file /usr/lib/haxe/std/cpp/vm/WeakRef.hx /usr/lib/haxe/std/cpp/vm/WeakRef.hx
file /usr/lib/haxe/std/haxe/CallStack.hx /usr/lib/haxe/std/haxe/CallStack.hx
file /usr/lib/haxe/std/haxe/EnumFlags.hx /usr/lib/haxe/std/haxe/EnumFlags.hx
file /usr/lib/haxe/std/haxe/Int32.hx /usr/lib/haxe/std/haxe/Int32.hx
file /usr/lib/haxe/std/haxe/Json.hx /usr/lib/haxe/std/haxe/Json.hx
file /usr/lib/haxe/std/haxe/Log.hx /usr/lib/haxe/std/haxe/Log.hx
file /usr/lib/haxe/std/haxe/Serializer.hx /usr/lib/haxe/std/haxe/Serializer.hx
file /usr/lib/haxe/std/haxe/Template.hx /usr/lib/haxe/std/haxe/Template.hx
file /usr/lib/haxe/std/haxe/Unserializer.hx /usr/lib/haxe/std/haxe/Unserializer.hx
file /usr/lib/haxe/std/haxe/crypto/Adler32.hx /usr/lib/haxe/std/haxe/crypto/Adler32.hx
file /usr/lib/haxe/std/haxe/crypto/Base64.hx /usr/lib/haxe/std/haxe/crypto/Base64.hx
file /usr/lib/haxe/std/haxe/crypto/BaseCode.hx /usr/lib/haxe/std/haxe/crypto/BaseCode.hx
file /usr/lib/haxe/std/haxe/crypto/Crc32.hx /usr/lib/haxe/std/haxe/crypto/Crc32.hx
file /usr/lib/haxe/std/haxe/crypto/Hmac.hx /usr/lib/haxe/std/haxe/crypto/Hmac.hx
file /usr/lib/haxe/std/haxe/crypto/Md5.hx /usr/lib/haxe/std/haxe/crypto/Md5.hx
file /usr/lib/haxe/std/haxe/crypto/Sha1.hx /usr/lib/haxe/std/haxe/crypto/Sha1.hx
file /usr/lib/haxe/std/haxe/crypto/Sha256.hx /usr/lib/haxe/std/haxe/crypto/Sha256.hx
file /usr/lib/haxe/std/haxe/ds/ArraySort.hx /usr/lib/haxe/std/haxe/ds/ArraySort.hx
file /usr/lib/haxe/std/haxe/ds/BalancedTree.hx /usr/lib/haxe/std/haxe/ds/BalancedTree.hx
file /usr/lib/haxe/std/haxe/ds/EnumValueMap.hx /usr/lib/haxe/std/haxe/ds/EnumValueMap.hx
file /usr/lib/haxe/std/haxe/ds/GenericStack.hx /usr/lib/haxe/std/haxe/ds/GenericStack.hx
file /usr/lib/haxe/std/haxe/ds/HashMap.hx /usr/lib/haxe/std/haxe/ds/HashMap.hx
file /usr/lib/haxe/std/haxe/ds/Vector.hx /usr/lib/haxe/std/haxe/ds/Vector.hx
file /usr/lib/haxe/std/haxe/format/JsonParser.hx /usr/lib/haxe/std/haxe/format/JsonParser.hx
file /usr/lib/haxe/std/haxe/format/JsonPrinter.hx /usr/lib/haxe/std/haxe/format/JsonPrinter.hx
file /usr/lib/haxe/std/haxe/io/BufferInput.hx /usr/lib/haxe/std/haxe/io/BufferInput.hx
file /usr/lib/haxe/std/haxe/io/Bytes.hx /usr/lib/haxe/std/haxe/io/Bytes.hx
file /usr/lib/haxe/std/haxe/io/BytesBuffer.hx /usr/lib/haxe/std/haxe/io/BytesBuffer.hx
file /usr/lib/haxe/std/haxe/io/BytesInput.hx /usr/lib/haxe/std/haxe/io/BytesInput.hx
file /usr/lib/haxe/std/haxe/io/BytesOutput.hx /usr/lib/haxe/std/haxe/io/BytesOutput.hx
file /usr/lib/haxe/std/haxe/io/Eof.hx /usr/lib/haxe/std/haxe/io/Eof.hx
file /usr/lib/haxe/std/haxe/io/FPHelper.hx /usr/lib/haxe/std/haxe/io/FPHelper.hx
file /usr/lib/haxe/std/haxe/io/Input.hx /usr/lib/haxe/std/haxe/io/Input.hx
file /usr/lib/haxe/std/haxe/io/Output.hx /usr/lib/haxe/std/haxe/io/Output.hx
file /usr/lib/haxe/std/haxe/io/Path.hx /usr/lib/haxe/std/haxe/io/Path.hx
file /usr/lib/haxe/std/haxe/io/StringInput.hx /usr/lib/haxe/std/haxe/io/StringInput.hx
file /usr/lib/haxe/std/haxe/macro/Expr.hx /usr/lib/haxe/std/haxe/macro/Expr.hx
file /usr/lib/haxe/std/haxe/rtti/Meta.hx /usr/lib/haxe/std/haxe/rtti/Meta.hx
file /usr/lib/haxe/std/haxe/xml/Parser.hx /usr/lib/haxe/std/haxe/xml/Parser.hx
file /usr/lib/haxe/std/haxe/xml/Printer.hx /usr/lib/haxe/std/haxe/xml/Printer.hx
file /usr/lib/haxe/std/sys/db/Manager.hx /usr/lib/haxe/std/sys/db/Manager.hx
file /usr/lib/haxe/std/sys/db/Object.hx /usr/lib/haxe/std/sys/db/Object.hx
file /usr/lib/haxe/std/sys/db/RecordMacros.hx /usr/lib/haxe/std/sys/db/RecordMacros.hx
file /usr/lib/haxe/std/sys/db/TableCreate.hx /usr/lib/haxe/std/sys/db/TableCreate.hx
file /usr/lib/haxe/std/sys/db/Transaction.hx /usr/lib/haxe/std/sys/db/Transaction.hx
file /usr/lib/haxe/std/sys/net/Address.hx /usr/lib/haxe/std/sys/net/Address.hx
file /usr/lib/haxe/std/sys/net/UdpSocket.hx /usr/lib/haxe/std/sys/net/UdpSocket.hx
file HXCPPRuntime.hx /Users/jeremyfa/Documents/Projets/lib-hxcpp-runtime/HXCPPRuntime.hx
file HXCPPRuntimeCPPIA.hx /Users/jeremyfa/Documents/Projets/lib-hxcpp-runtime/HXCPPRuntimeCPPIA.hx
file HXCPPRuntimeHello.hx /Users/jeremyfa/Documents/Projets/lib-hxcpp-runtime/HXCPPRuntimeHello.hx
file hx2objc/IDHolder.hx /Users/jeremyfa/Documents/Projets/lib-hxcpp-runtime/hx2objc/IDHolder.hx
